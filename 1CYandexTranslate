// Функция подключается к сервису Яндекс.Перевод, отправляет сформированный по переданному тексту запрос на перевод, 
// получает ответ и разбирает его. Направление перевода можно тоже сделать параметром. Доступный список направлений смотрите 
// в справке сервиса. Он возвращается ответом на запрос https://translate.yandex.net/api/v1.5/tr.json/getLangs.

&НаСервере
Функция ПеревестиНаСервере(ТекстОригинал)
		
// Пример работы с API можно посмотреть тут: https://tech.yandex.ru/translate/doc/dg/reference/translate-docpage/
// Для работы необходимо получить бесплатный ключ API. Выдается мгновенно. Нужна регистрация на Yandex.
// Получить ключ можно по ссылке: https://tech.yandex.ru/keys/get/?service=trnsl

// Сервис ожидает запрос в формате (цитата из справки):
//
//https://translate.yandex.net/api/v1.5/tr/translate ? 
//key=<API-ключ>
// & text=<переводимый текст>
// & lang=<направление перевода>
// & [format=<формат текста>]
// & [options=<опции перевода>]
//
// два последних параметра - format и options необязательны.

// На самом деле, если сформировать такой запрос, то сервис ничего не вернет, ругнется и предложит почитать справку.
// Все дело в лишних пробелах. Возле знаков "?" и "&". Все пробелы надо убрать.

// Собираем запрос:
	
	ApiКлюч = "вставьте сюда свой личный API-ключ, полученый по ссылке https://tech.yandex.ru/keys/get/?service=trnsl";
	ТекстОригинал = СокрЛП(ТекстОригинал);
	НаправлениеПеревода = "en-ru";
	
	ЗапросТекст = "/api/v1.5/tr.json/translate?key=" + ApiКлюч +
		"&text=" + ТекстОригинал +
		"&lang=" + НаправлениеПеревода;
		
// Отправляем запрос на сервер. Используем защищенное соединение.
// Адрес сервера выносим из текста запроса в параметры соединения.
// "HTTPS://" убираем, оно подставится автоматически при указании, что соединение будет защищенным - 7 параметр ssl

	ssl = Новый ЗащищенноеСоединениеOpenSSL(); 	
  Соединение = Новый HTTPСоединение("translate.yandex.net",,,,,,ssl);
  Запрос = Новый HTTPЗапрос(ЗапросТекст);
  Ответ = Соединение.Получить(Запрос);
	ОтветСервера = Ответ.ПолучитьТелоКакСтроку();	
	
	Если НЕ Ответ.КодСостояния = 200 Тогда
		
		// ошибка, надо сообщить и прервать обработку
		Сообщить("Ошибка: " + Ответ.КодСостояния + " " + ОтветСервера);
		
		Возврат ОтветСервера;
		
	КонецЕсли;
	
// Все ОК, можно разбирать ответ
	
	
// Отвечает сервер в формате JSON. чтобы 1С его корректно разобрало в структуру, надо перед ответом дописать что-нибудь 
// в кавычках и с двоеточием. Например:
// Ответ сервера: 
// {"code":200,"lang":"en-ru","text":["Собака"]}
// такой ответ 1С не понимает, ругается и не может его разобрать. Если убрать фигурные скобки, 1С разберет такую строку,
// но пропустит все названия полей. Возьмет только значения. Это неудобно.
// дописываем в начало "answer":
// получаем:
// "answer":{"code":200,"lang":"en-ru","text":["Собака"]}
// 1С такой ответ считает корректным и разбирает все, что после "answer": в фигурных скобках в структуру. Название поля
// будет ключем, а значение - значением. В таком виде работать удобно.
// 

	СтрокаJSON = """answer"":" + ОтветСервера;
	
	Если СтрДлина(СтрокаJSON) > 0 Тогда 
		// читаем JSON с ответами
		ЧтениеJSON = Новый ЧтениеJSON();
		ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
		Пока ЧтениеJSON.Прочитать() Цикл
			
			Структура = ПрочитатьJSON(ЧтениеJSON);
			Если ТипЗнч(Структура) = Тип("Структура") Тогда
				
			    Если Структура.code = 200 Тогда
				// все ок, разбираем ответ. С кодами ответов сервера можно ознакомиться по ссылке на документацию выше
					// перевод лежит в массиве text
					ВремПеревод = "";
					Для Каждого Эл Из Структура.text Цикл
						ВремПеревод = ВремПеревод + ", " + Эл;
					КонецЦикла;	
					ВремПеревод = Прав(ВремПеревод, СтрДлина(ВремПеревод)-2);
				Иначе
				// сервер вернул ошибку. надо сообщить
				Сообщить("Ошибка: " + Структура.code + " " + Структура.message);
				КонецЕсли;	
			Иначе
				// вернулось что-то непонятное. Мы ждали структуру
				Сообщить("Ошибка: " + Структура);
			КонецЕсли;	
		КонецЦикла;	
		ЧтениеJSON.Закрыть();
	КонецЕсли;
	
	Возврат ВремПеревод;
	
КонецФункции

&НаКлиенте
Процедура Перевести(Команда)
	
	Объект.Результат = ПеревестиНаСервере(Объект.Оригинал);
	
КонецПроцедуры
