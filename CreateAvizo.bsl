// форма обработки. на основании данных регистра сведений, собирает остатки по счету 08.03 и если данные есть, создает и заполняет
// документ АвизоПрочееИсходящее
// в регистре сведений СопоставлениеОбъектов хранятся:
// 1. Соответствие счета расчета и способа строительства.
// 2. Соответствие Организации и проекта - по выбранной на форме Организации подбираются Проекты для которых находятся ОбъектыСтроительства
//  по которым потом собираются остатки.
// 3. Соответствие СтатьиРасчета и Вида хозоперации


Процедура СобратьДанныеСХозрасчетного()
	
	ТЗСчетРасчетов = ДанныеИзРССопоставлениеОбъектов("ДокАвизоПрочееИсходящееОбрабоктаЗаполнения_СоответствиеСчетРасчетовСпособСтроительства");
	ТЗВидыХозОпераций = ДанныеИзРССопоставлениеОбъектов("ДокАвизоПрочееИсходящееОбрабоктаЗаполнения_СоответствиеВидХозОперацииСтатьяЗатрат");
	ТЗПроекты = ДанныеИзРССопоставлениеОбъектов("ДокАвизоПрочееИсходящееОбрабоктаЗаполнения_СоответствиеОбъектСтроительстваПроектыОрганизация", Организация);
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	ОбъектыСтроительства.Ссылка
		|ПОМЕСТИТЬ ВТ_ОбъектыСтроительства
		|ИЗ
		|	Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
		|ГДЕ
		|	ОбъектыСтроительства.ПометкаУдаления = ЛОЖЬ
		|	И ОбъектыСтроительства.Проект В ИЕРАРХИИ(&Проекты)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОбороты.Субконто3,
		|	ХозрасчетныйОстатки.Подразделение,
		|	ХозрасчетныйОбороты.СуммаОборотДт,
		|	ХозрасчетныйОбороты.СуммаОборотКт,
		|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаКТ,
		|	ХозрасчетныйОстатки.СуммаНУОстатокДт КАК СуммаНУ,
		|	ХозрасчетныйОстатки.СуммаПРОстатокДт КАК СуммаПР,
		|	ХозрасчетныйОстатки.СуммаВРОстатокДт КАК СуммаВР,
		|	ХозрасчетныйОстатки.Счет КАК СчетУчета
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&КонецПериода,
		|			Счет = &Счет0803,
		|			,
		|			Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						ВТ_ОбъектыСтроительства.Ссылка
		|					ИЗ
		|						ВТ_ОбъектыСтроительства КАК ВТ_ОбъектыСтроительства)) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(
		|				,
		|				&КонецПериода,
		|				,
		|				Счет = &Счет0803,
		|				,
		|				Организация = &Организация
		|					И Субконто1 В
		|						(ВЫБРАТЬ
		|							ВТ_ОбъектыСтроительства.Ссылка
		|						ИЗ
		|							ВТ_ОбъектыСтроительства КАК ВТ_ОбъектыСтроительства),
		|				,
		|				) КАК ХозрасчетныйОбороты
		|		ПО ХозрасчетныйОстатки.Субконто1 = ХозрасчетныйОбороты.Субконто1
		|			И ХозрасчетныйОстатки.Субконто2 = ХозрасчетныйОбороты.Субконто2
		|			И ХозрасчетныйОстатки.Подразделение = ХозрасчетныйОбороты.Подразделение
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто3 <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяССылка)";	
		
		
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Проекты", ТЗПроекты.ВыгрузитьКолонку("Значение"));
	Запрос.УстановитьПараметр("Счет0803", ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств); //08.03
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Сообщить("Нет данных для формирования документа. Операция не выполена" );
		Возврат;
	КонецЕсли;	
	
	НовАвизо = Документы.АвизоПрочееИсходящее.СоздатьДокумент();
	НовАвизо.Организация = Организация;
	НовАвизо.ОрганизацияПолучатель = ОрганизацияПолучатель;
	НовАвизо.Дата = КонецДня(КонецПериода);
	НовАвизо.Ответственный = Ответственный;
	
	НовАвизо.ДанныеБух.Очистить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// по способу строительства определяется счет дебета. а если способ не указан, то и счет неизвестен
		Если ВыборкаДетальныеЗаписи.Субконто3 = Неопределено Тогда 
			Сообщить("Счет расчетов не определен, строка будет пропущена " + ВыборкаДетальныеЗаписи.Субконто1 + ", " + "Счет расчетов не определен, строка будет пропущена " + ВыборкаДетальныеЗаписи.Субконто2);
			Продолжить; 
		КонецЕсли;
		
		НайденнаяСтрока = ТЗСчетРасчетов.Найти(ВыборкаДетальныеЗаписи.Субконто3, "Ключ");
		Если НайденнаяСтрока = Неопределено Тогда
		    Сообщить("Счет расчетов не определен, строка будет пропущена " + ВыборкаДетальныеЗаписи.Субконто3);
		Иначе
			
			СтрокаТЧ = НовАвизо.ДанныеБух.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, ВыборкаДетальныеЗаписи);
			СтрокаТЧ.СчетРасчетов = НайденнаяСтрока.Значение;
			
			НайденнаяСтрока = ТЗВидыХозОпераций.Найти(ВыборкаДетальныеЗаписи.Субконто2, "Ключ");
			Если НайденнаяСтрока = Неопределено Тогда
		    	Сообщить("Не найдена хоз операция для статьи затрат " + ВыборкаДетальныеЗаписи.Субконто2);
			Иначе
				СтрокаТЧ.ВидХозяйственнойОперации = НайденнаяСтрока.Значение;   
			КонецЕсли;
		
		КонецЕсли; 
		
	КонецЦикла;
	
	НовАвизо.Записать(РежимЗаписиДокумента.Запись);
	
	Сообщить("Создан документ " + НовАвизо);
	Попытка
		НовАвизо.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Сообщить("Не удалось провести документ " + НовАвизо);
	КонецПопытки;		
	
КонецПроцедуры	

Процедура КоманднаяПанель2Собрать(Кнопка)
	
	СобратьДанныеСХозрасчетного();

КонецПроцедуры



Функция ДанныеИзРССопоставлениеОбъектов(ВидСопоставления, парамОрганизация = Неопределено)
	
	//ДокАвизоПрочееИсходящееОбрабоктаЗаполнения_СоответствиеВидХозОперацииСтатьяЗатрат
	//ДокАвизоПрочееИсходящееОбрабоктаЗаполнения_СоответствиеОбъектСтроительстваПроектыОрганизация
	//ДокАвизоПрочееИсходящееОбрабоктаЗаполнения_СоответствиеСчетРасчетовСпособСтроительства
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СопоставлениеОбъектов.Ключ,
		|	СопоставлениеОбъектов.Значение
		|ИЗ
		|	РегистрСведений.СопоставлениеОбъектов КАК СопоставлениеОбъектов
		|ГДЕ
		|	СопоставлениеОбъектов.ВидСопоставления = &ВидСопоставления";
	
	Запрос.УстановитьПараметр("ВидСопоставления", ВидСопоставления);
	
	Если Не парамОрганизация = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + " И СопоставлениеОбъектов.Ключ = &Организация";
		Запрос.УстановитьПараметр("Организация", парамОрганизация);
	КонецЕсли;	
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции	

Процедура ПриОткрытии()
	
	КонецПериода = ТекущаяДата();
	
КонецПроцедуры
